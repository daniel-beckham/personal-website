version: '3.8'

services:
  db:
    env_file: .env
    expose:
      - '${POSTGRES_PORT}'
    image: postgres:12-alpine
    restart: unless-stopped
    volumes:
      - 'db_volume:/var/lib/postgresql/data/'
  db_dependency:
    command: ${POSTGRES_HOST}:${POSTGRES_PORT}
    depends_on:
      - db
    image: dadarek/wait-for-dependencies
  movie_database_viewer_backend:
    build:
      context: ./movie-database-viewer
      dockerfile: ./backend/Dockerfile
    command: npm run start
    env_file: .env
    environment:
      - SUBDIRECTORY=${MOVIE_DATABASE_VIEWER_SUBDIRECTORY}
    expose:
      - '4000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.movie-database-viewer.entrypoints=web-secure'
      - 'traefik.http.routers.movie-database-viewer.rule=Host(`danielbeckham.com`) && PathPrefix(`/movie-database-viewer`)'
      - 'traefik.http.routers.movie-database-viewer.tls=true'
    restart: unless-stopped
    volumes:
      - 'movie_database_viewer_frontend_static_volume:/app/frontend/build'
  movie_database_viewer_frontend:
     build:
      context: ./movie-database-viewer
      dockerfile: ./frontend/Dockerfile
      args:
        - SUBDIRECTORY=${MOVIE_DATABASE_VIEWER_SUBDIRECTORY}
     env_file: .env
     volumes:
        - 'movie_database_viewer_frontend_static_volume:/app/frontend/build'
  stock_market_price_updater_backend:
    build:
      context: ./stock-market-price-updater
      dockerfile: ./backend/Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 main:app
    depends_on:
      - db_dependency
    env_file: .env
    environment:
      - SUBDIRECTORY=${STOCK_MARKET_PRICE_UPDATER_SUBDIRECTORY}
    expose:
      - '5000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.stock-market-price-updater.entrypoints=web-secure'
      - 'traefik.http.routers.stock-market-price-updater.rule=Host(`danielbeckham.com`) && PathPrefix(`/stock-market-price-updater`)'
      - 'traefik.http.routers.stock-market-price-updater.tls=true'
    restart: unless-stopped
    volumes:
      - 'stock_market_price_updater_static_volume:/app/backend/website/static'
  stock_market_price_updater_frontend:
    build:
      context: ./stock-market-price-updater
      dockerfile: ./frontend/Dockerfile
      args:
        - SUBDIRECTORY=${STOCK_MARKET_PRICE_UPDATER_SUBDIRECTORY}
    env_file: .env
    volumes:
      - 'stock_market_price_updater_static_volume:/app/backend/website/static'
  traefik:
    env_file: .env
    image: 'traefik:v2.4.9'
    labels:
      - 'traefik.enable=true'
      # Router (certs)
      - 'traefik.http.routers.certs.tls.certresolver=default'
      - 'traefik.http.routers.certs.tls.domains[0].main=danielbeckham.com'
      - 'traefik.http.routers.certs.tls.domains[0].sans=*.danielbeckham.com'
      # Router (http-catchall)
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=https-www-redirect'
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      # Router (https-www-catchall)
      - 'traefik.http.routers.https-www-catchall.entrypoints=web-secure'
      - 'traefik.http.routers.https-www-catchall.middlewares=https-www-redirect'
      - "traefik.http.routers.https-www-catchall.rule=HostRegexp(`{host:.+}`)"
      - 'traefik.http.routers.https-www-catchall.tls=true'
      # Router (traefik)
      - 'traefik.http.routers.traefik.entrypoints=web-secure'
      - 'traefik.http.routers.traefik.middlewares=traefik-auth'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.danielbeckham.com`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.tls=true'
      # Middleware (https-www-redirect)
      - 'traefik.http.middlewares.https-www-redirect.redirectregex.permanent=true'
      - "traefik.http.middlewares.https-www-redirect.redirectregex.regex=^https?://(?:www\\.)?(.+)"
      - 'traefik.http.middlewares.https-www-redirect.redirectregex.replacement=https://$${1}'
      # Middleware (traefik-auth)
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTH}'
    ports:
      - '80:80'
      - '443:443'
    restart: unless-stopped
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './access.log:/access.log'
      - './acme.json:/acme.json'
      - './traefik.yml:/traefik.yml:ro'
  website:
    build:
      context: ./website
      dockerfile: ./Dockerfile
      args:
        - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
        - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
        - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
        - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
    command: gunicorn --bind 0.0.0.0:3000 website.wsgi:application
    env_file: .env
    expose:
      - '3000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.website.entrypoints=web-secure'
      - 'traefik.http.routers.website.rule=Host(`danielbeckham.com`)'
      - 'traefik.http.routers.website.tls=true'
    restart: unless-stopped
volumes:
  db_volume:
  movie_database_viewer_frontend_static_volume:
  stock_market_price_updater_static_volume:
